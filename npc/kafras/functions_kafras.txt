//===== Script =======================================
// Kafra Functions
//====================================================

//=== Main Function ========================================================
//=   arg(0): Used to determine which welcome message to show.
//=   arg(1): Used to determine which menu to display.
//=   arg(2): Used to determine if the info menu is shown in F_KafInfo.
//=   arg(3): Cost to use Storage
//=   arg(4): Cost to Rent a Pushcart
//==========================================================================
function	script	F_Kafra	{
	callfunc "F_ClearGarbage"; // Clear outdated, unused variables
	.@welcome = getarg(0);
	.@menu_num = getarg(1);

	// Display Kafra Welcome Message
	switch(.@welcome) {
	default:// Default message (obsolete)
		mes "[Kafra Employee]";
		mes "Welcome to the";
		mes "Kafra Corporation.";
		mes "The Kafra services";
		mes "are always on your side.";
		mes "How may I assist you?";
		break;
	case 1:// Niflheim specific message
		mes "[Kafra Employee]";
		mes "^666666W-weeeelc-c-come";
		mes "to th-the K-kaaafrrrra";
		mes "C-coorpoor-r-ratioooonn...^000000";
		break;
	case 2:// Guild Castle Kafra message
		mes "[Kafra Employee]";
		mes "Welcome. ^ff0000" + getguildname( getcharid(2) ) + "^000000 Member.";
		mes "The Kafra Coporation will stay with you wherever you go.";
		break;
	case 3:// Amatsu specific message (obsolete)
		mes "[Kafra Employee]";
		mes "So, have you come from a faraway land to study our culture, or are you just sightseeing?";
		mes "In either case, why not stay awhile?";
		mes "The air is eternally heavy with the";
		mes "scent of pleasant wildflowers.";
		break;
	case 4:// Luoyang and Ayothaya specific message (obsolete)
		mes "[Kafra Employee]";
		mes "With our many Kafra";
		mes "service locations, you're never";
		mes "far from home.";
		break;
	case 5:// NPC has it's own welcome message. (Display nothing)
		break;
	}
	next;
	if (.@welcome == 2)// Guild Kafra Menu override (free Teleport, free Storage, Free Cart)
		setarray .@K_Menu0$[0], "Use Storage", "Use Guild Storage", "Rent a Pushcart", "Use Teleport Service", "Cancel";
	else {
		switch(.@menu_num) {
			case 1:	setarray .@K_Menu0$[0],"Use Storage","Cancel"; break;
			case 2:	setarray .@K_Menu0$[0],"Use Storage","Cancel"; break;
			case 3: setarray .@K_Menu0$[0],"Use Storage","Rent a Pushcart","Cancel"; break;
			case 5:	setarray .@K_Menu0$[0],"Use Storage","Rent a Pushcart","Cancel"; break;
			case 6:	setarray .@K_Menu0$[0],"Use Storage","Cancel"; break;
			case 7:	setarray .@K_Menu0$[0],"Use Storage","Rent a Pushcart","Cancel"; break;
			case 8: setarray .@K_Menu0$[0],"Use Storage","Cancel"; break;
			case 9: setarray .@K_Menu0$[0],"Use Storage","Rent a Pushcart","Use Teleport Service","Cancel"; break;
			case 10: setarray .@K_Menu0$[0],"Use Storage","Rent a Pushcart","Cancel"; break;
			default: setarray .@K_Menu0$[0],"Use Storage","Use Teleport Service","Rent a Pushcart","Cancel"; break;
		}
	}
	.@menu$ = implode(.@K_Menu0$,":");
	while (true) {
		.@j = select(.@menu$) - 1;
		if (.@K_Menu0$[.@j] == "Save")
			return;
		else if (.@K_Menu0$[.@j] == "Use Storage") {
			if (.@welcome == 2)// Do not charge for Guild Storage
				callfunc "F_KafStor",2,0,0;
			else
				callfunc "F_KafStor",0,getarg(3),.@welcome;
			next;
		}
		else if (.@K_Menu0$[.@j] == "Use Teleport Service") {
			callfunc "F_KafTele",.@welcome;
			next;
		}
		else if (.@K_Menu0$[.@j] == "Rent a Pushcart") {
			if (callfunc("F_KafCart",.@welcome,getarg(4)) == 1)
				next;
		}
		else if (.@K_Menu0$[.@j] == "Check Other Information") {
			callfunc "F_KafInfo",getarg(2);
			next;
		}
		else if (.@K_Menu0$[.@j] == "Cancel") {
			callfunc "F_KafEnd",.@welcome,0;
			end;
		}
		else if (.@K_Menu0$[.@j] == "Use Guild Storage") {
			callfunc "F_KafStor",1,0;
			next;
		}
	}
}

//===================================================
// Storage Function
//===================================================
function	script	F_KafStor	{
	.@type = getarg(0);
	.@fee = getarg(1);

	// Unable to access Guild Storage (Busy)
	if (.@type == 1) {
		if (guildopenstorage()) {
			mes "[Kafra Employee]";
			mes "I'm sorry but another guild member is using the guild storage";
			mes "right now.  Please wait until that person is finished.";
			close3;
		}
		cutin "", 255;
		close;
	}
	// Unable to access Normal Storage (Insufficient Basic Skills)
	if (!callfunc("F_CanOpenStorage")) {
		mes "[Kafra Employee]";
		// Niflheim Specific Message
		if (getarg(2) == 1) {
			mes "^666666S-s-ssoooorry,";
			mes "y-you're a-a-aaaa";
			mes "Nooviiice... N-neeeds";
			mes "B-basic sssskill l-level 6...^000000";
			return;
		}
		mes "I'm sorry, but you";
		mes "need the Novice's";
		mes "Basic Skill Level 6 to";
		mes "use the Storage Service.";
		return;
	}
	// Accessing Normal Storage (Skipped if accessing Storage from Guild castle)
	if (.@type != 2) {
		// Consume "Free Ticket for Kafra Storage" if available.
		if (countitem(7059))
			delitem 7059,1;
		else {
			if (Zeny < .@fee) {
				mes "[Kafra Employee]";
				// Niflheim Specific Message
				if (getarg(2) == 1) {
					percentheal -50,-50;
					mes "^666666Zeeeeeny...";
					mes "M-more z-zeny...!";
					mes "N-neeed 150... zeny...";
					mes "Ergh! T-taking bl-blood~!^000000";
					return;
				}
				// Standard Message
				mes "I'm sorry, but you don't";
				mes "have enough zeny to use";
				mes "the Storage Service. Our";
				mes "Storage access fee is " + .@fee + " zeny.";
				return;
			}
			Zeny -= .@fee;
			RESRVPTS += (.@fee/5);
		}
	}

	// Surpress the "End" message if in guild castle.
	if (.@type != 2) {
		// Niflheim specific Message
		if (getarg(2) == 1) {
			percentheal 0,-10;
			mes "[Kafra Employee]";
			for ( .@i = 0; .@i < 5; .@i++ )
				mes "^666666Thank you.. for... using...^000000";
		}
		// Normal message
		else {
			mes "[Kafra Employee]";
			mes "Here, let me open";
			mes "your Storage for you.";
			mes "Thank you for using";
			mes "the Kafra Service.";
		}
	}
	callfunc("F_CheckKafCode");	//check your storage password, if set
	close2;
	openstorage;
	cutin "", 255;
	end;
}

//===================================================
// Teleport Function
//===================================================
function	script	F_KafTele	{
	mes "[Kafra Employee]";
	mes "Please choose";
	mes "your destination.";
	next;
	.@j = select( implode(@wrpC$,":") ) - 1;
	if (@wrpC$[.@j] == "Cancel")
		return;
	// Consume "Free Ticket for Kafra Transportation" if available.
	// Do not consume if in Guild castle
	if (countitem(7060) > 0 && getarg(0) != 2)
		delitem 7060,1;
	else {
		if (Zeny < @wrpP[.@j]) {
			mes "[Kafra Employee]";
			mes "I'm sorry, but you don't have";
			mes "enough zeny for the Teleport";
			mes "Service. The fee to teleport";
			mes "to " + @wrpD$[.@j] + " is " + @wrpP[.@j] + " zeny.";
			close3;
		}
		Zeny -= @wrpP[.@j];
		RESRVPTS += (@wrpP[.@j]/16);
	}
	cutin "", 255;
	if (@wrpD$[.@j] == "Aldebaran") warp "aldebaran",140,119;
	else if (@wrpD$[.@j] == "Alberta") warp "alberta", 32, 235;
	else if (@wrpD$[.@j] == "Comodo") warp "comodo", 197, 319;
	else if (@wrpD$[.@j] == "Pharos Islet") warp "cmd_fild07", 138, 132;
	else if (@wrpD$[.@j] == "Hugel") warp "hugel", 98, 127;
	else if (@wrpD$[.@j] == "Veins") warp "veins", 205, 118;
	else if (@wrpD$[.@j] == "Tidal Island") warp "nameless_n", 222, 182;
	else if (@wrpD$[.@j] == "Hel's Camp") warp "mid_camp", 143, 277;
	else if (@wrpD$[.@j] == "Nifflheim") warp "niflheim", 186, 187;
	else if (@wrpD$[.@j] == "Dicastes") warp "dicastes01", 199, 224;
	else if (@wrpD$[.@j] == "Lighthalzen") warp "lighthalzen", 162, 95;
	else if (@wrpD$[.@j] == "Rachel") warp "rachel", 118, 136;
	else if (@wrpD$[.@j] == "Einbroch") warp "einbroch", 246, 208;
	else if (@wrpD$[.@j] == "Geffen") warp "geffen", 124, 64;
	else if (@wrpD$[.@j] == "Izlude") {
			warp "izlude", 130, 145;
	}
	else if (@wrpD$[.@j] == "Yuno") warp "yuno", 157, 187;
	else if (@wrpD$[.@j] == "Mjolnir Dead Pit") warp "mjolnir_02", 99, 351;
	else if (@wrpD$[.@j] == "Morocc") warp "morocc", 158, 95;
	else if (@wrpD$[.@j] == "Orc Dungeon") warp "gef_fild10", 52, 326;
	else if (@wrpD$[.@j] == "Payon") warp "payon", 177, 104;
	else if (@wrpD$[.@j] == "Prontera") warp "prontera", 157, 187;
	else if (@wrpD$[.@j] == "Umbala") warp "umbala", 100, 154;
	end;
}


//===================================================
// Cart Function
//===================================================
function	script	F_KafCart	{
	// Ensure that the class wanting to rent a pushcart is a merchant
	if (BaseClass != Job_Merchant) {
		mes "[Kafra Employee]";
		mes "I'm sorry, but the";
		mes "Pushcart rental service";
		if (checkre(0) == true)
			mes "is only available to Merchant classes.";
		else {
			mes "is only available to Merchants,";
			mes "Blacksmiths, Master Smiths,";
			mes "Alchemists and Biochemists.";
		}
		return 1;
	}
	// Make sure the invoking character does not have a cart already
	else if (checkcart() == true) {
		mes "[Kafra Employee]";
		mes "You already have";
		mes "a Pushcart equipped.";
		mes "Unfortunately, we can't";
		mes "rent more than one to";
		mes "each customer at a time.";
		return 1;
	}
	// Check if the player has the Pushcart skill
	else if (getskilllv("MC_PUSHCART") == 0) {
		mes "[Kafra Employee]";
		mes "You can only rent a cart after learning the \"Push Cart\" skill.";
		return 1;
	}
	// Consume "Free Ticket for the Cart Service" if available.
	// Do not consume if in Guild castle.
	if (countitem(7061) > 0 && getarg(0) != 2)
		delitem 7061,1;
	else {
		.@rental_fee = getarg(1);
		mes "[Kafra Employee]";
		mes "The Pushcart rental";
		mes "fee is " + .@rental_fee + " zeny. Would";
		mes "you like to rent a Pushcart?";
		next;
		if (select("Rent a Pushcart.:Cancel") == 2)
			return 0;
		if (Zeny < .@rental_fee) {
			mes "[Kafra Employee]";
			mes "I'm sorry, but you";
			mes "don't have enough";
			mes "zeny to pay the Pushcart";
			mes "rental fee of " + .@rental_fee + " zeny.";
			return 1;
		}
		Zeny -= .@rental_fee;
		RESRVPTS += 48;
	}
	setcart;
	return 1;
}

//===================================================
// Special Reserve Points Function
//===================================================
function	script	F_KafInfo	{
// Uncomment next line to block Kafra Storage Protection
//	.@block = 1;
	if (getarg(0) == 2)// Port Malaya, Rune Knight
		setarray .@menu$[0], "Check Special Reserve Points.", "", "", "Cancel";
	else if (.@block)
		setarray .@menu$[0], "Check Special Reserve Points.", "", "Kafra Employee Locations", "Cancel";
	else
		setarray .@menu$[0], "Check Special Reserve Points.", "Storage Password Service", "Kafra Employee Locations", "Cancel";
	.@menu_list$ = implode(.@menu$,":");
	while (true) {
		.@j = select(.@menu_list$) - 1;
		switch(.@j) {
		case 0:// Check Special Reserve Points.
			mes "[Kafra Employee]";
			mes "Let's see...";
			mes "" + strcharinfo(0) + "...";
			mes "Ah, you have a total of";
			mes "" + RESRVPTS + " Special Reserve Points.";
			next;
			mes "[Kafra Employee]";
			mes "You can exchange your";
			mes "Special Reserve Points for";
			mes "rewards at the Kafra Main Office in Aldebaran. Please use our";
			mes "convenient services to see the benefits of our rewards program.";
			if (getarg(0) == 1)
				return;
			next;
			break;
		case 1:// Storage Password Service
			callfunc("F_SetKafCode","[Kafra Employee]","Kafra Services");
		case 2:// Kafra Employee Locations
			for ( .@i = 0; .@i <= 3; .@i++ )
				viewpoint 1,@viewpX[.@i],@viewpY[.@i],(.@i+1),0xFF00FF;
			next;
			for ( .@i = 0; .@i <= 3; .@i++ )
				viewpoint 2,@viewpX[.@i],@viewpY[.@i],(.@i+1),0xFF00FF;
			break;
		default:
			return;
		}
	}
}

// === End Function ==================================================
//  arg(0): used to determine what message to display.
//  arg(1): used to determine if save message is displayed.
//  arg(2): used to display the name of the area you're saving in.
//===================================================================
function	script	F_KafEnd	{
	.@type = getarg(0);
	mes "[Kafra Employee]";
	if (getarg(1) == true) {// Save
		mes "Your Respawn Point";
		mes "has been saved here";
		mes "" + getarg(2) + ".";
		mes "Thank you for using";
		mes "the Kafra Services.";
	} else if (.@type == 0 || .@type == 5) {// Generic End
		mes "We, here at Kafra Corporation,";
		mes "are always endeavoring to provide you with the best services. We hope that we meet your adventuring needs and standards of excellence.";
	} else if (.@type == 1) {// Niflheim End
		percentheal 0,-25;
		mes "^666666Kaffffra n-never";
		mes "diiiiiiiiiiiiiies. On...";
		mes "On y-yooour siiiiide~^000000";
	} else if (.@type == 2) {// RockRidge Save
		mes "Saved.";
		mes "Thank you for your patronage.";
	}
	close3;
}

//===================================================
// Check Storage Password Function
//===================================================
function	script	F_CheckKafCode	{
	if (!#kafra_code)
		return;
	mes "Enter your storage password:";
	input .@code_;
	if (.@code_ != #kafra_code) {
		dispbottom "Wrong storage password.";
		close3;
	}
	@kafcode_try = 0;
	return;
}

// === Set / Change / Clear Storage Password Function ===
// getarg(0): NPC Name
// getarg(1): Company Name
//=======================================================
function	script	F_SetKafCode	{
	.@npc_name$ = getarg(0);
	.@comp_name$ = getarg(1);

	mes .@npc_name$;
	if (#kafra_code == 0) {
		mes "" + .@comp_name$ + " proudly presents you a new service:";
		mes "Additional storage protection with a password.";
		next;
		if (select( "Set new password -> 5000z", "Cancel" ) == 1)
			callsub( S_SET, .@npc_name$, .@comp_name$ );
		close3;
	}
	mes "Your storage is protected with a password. What would you do now?";
	next;
	switch( select( "Change old password -> 5000z", "Remove storage password -> 1000z", "Cancel" ) ) {
	case 1:
		mes .@npc_name$;
		mes "At first, please enter your ^0000FFold password^000000.";
		.@code = callfunc("F_EntKafCode");
		if (!.@code || .@code != #kafra_code) {
			mes "Wrong password. You can't set a new password.";
			emotion ET_SCRATCH;
			break;
		}
		next;
		callsub( S_SET, .@npc_name$, .@comp_name$ );
		break;
	case 2:
		mes .@npc_name$;
		mes "Please, enter your password before its removal.";
		.@code = callfunc("F_EntKafCode");
		if (!.@code) {
			mes "The password hasn't been removed.";
			emotion ET_SCRATCH;
			break;
		}
		next;
		mes .@npc_name$;
		if (Zeny < 1000) {
			mes "You don't have enough zeny.";
			emotion ET_MONEY;
			break;
		}
		Zeny -= 1000;
		if (.@code == #kafra_code) {
			#kafra_code = 0;
			mes "You've successfully cleared your storage password.";
			mes "Thank you for using " + .@comp_name$ + ".";
			emotion ET_THANKS;
		} else {
			mes "Wrong password. We won't return your 1000z.";
			mes "Please, next time enter correct password.";
			emotion ET_SORRY;
		}
		break;
	case 3:
		break;
	}
	close3;

S_SET:
	.@npc_name$ = getarg(0);
	.@comp_name$ = getarg(1);

	mes .@npc_name$;
	mes "Now enter your ^FF0000new password^000000 to protect your storage from thieves.";
	.@code = callfunc("F_EntKafCode");
	if (!.@code) {
		mes "The password hasn't been changed.";
		emotion ET_SCRATCH;
		return;
	}
	next;
	mes .@npc_name$;
	if (Zeny < 5000) {
		mes "You don't have enough zeny.";
		emotion ET_MONEY;
		return;
	}
	Zeny -= 5000;
	#kafra_code = .@code;
	mes "You've protected your storage with a secret password.";
	mes "Thank you for using " + .@comp_name$ + ".";
	emotion ET_THANKS;
	return;
}

//===================================================
// Basic Password Validation Function
//===================================================
function	script	F_EntKafCode	{
	mes "Enter a number 1000~10000000:";
	@kafcode_try += 1;
	if (@kafcode_try > 10) {
		@kafcode_try = 0;
		logmes "Tried to fit storage password.";
		return 0;
	}
	if (input(.@code_) == 1) {
		mes "You can't use such big password.";
		return 0;
	}
	if (.@code_ < 1000) {
		mes "You shouldn't use such short password.";
		return 0;
	}
	return .@code_;
}

//===================================================
// Warp Points / View Points Function
//===================================================
function	script	F_KafSet	{
	deletearray @wrpC$[0], getarraysize(@wrpC$);
	deletearray @wrpD$[0], getarraysize(@wrpD$);
	deletearray @wrpP$[0], getarraysize(@wrpP$);
	deletearray @viewpX[0], getarraysize(@viewpX);
	deletearray @viewpY[0], getarraysize(@viewpY);

	.@map$ = strnpcinfo(4);
	if (.@map$ == "prontera") {
		setarray @wrpD$[0], "Izlude", "Geffen", "Payon", "Morocc", "Orc Dungeon", "Alberta";
		setarray @wrpP[0], 600, 1200, 1200, 1200, 1700, 1800;
		setarray @viewpX[0], 151, 29, 282, 152;
		setarray @viewpY[0], 29, 207, 200, 326;
	} else if (.@map$ == "alberta") {
		setarray @wrpP[0], 1200, 1800, 1800;
		setarray @wrpD$[0], "Payon";
		setarray @viewpX[0], 28, 113, 0, 0;
		setarray @viewpY[0], 229, 60, 0, 0;
	} else if (.@map$ == "aldebaran") {
		setarray @wrpP[0], 1200, 1200, 1800, 1700;
		setarray @wrpD$[0], "Yuno";
	} else if (.@map$ == "hugel") {
		setarray @wrpP[0], 1200, 1200, 1800, 1700;
		setarray @wrpD$[0], "Yuno";
	} else if (.@map$ == "veins") {
		setarray @wrpP[0], 1200, 2000;
		setarray @wrpD$[0], "Rachel", "Tidal Island";
	} else if (.@map$ == "nameless_n") {
		setarray @wrpP[0], 2000;
		setarray @wrpD$[0], "Veins";
	} else if (.@map$ == "mid_camp") {
		setarray @wrpP[0], 1000, 1200;
		setarray @wrpD$[0], "Nifflheim", "Rachel";
	} else if (.@map$ == "niflheim") {
		setarray @wrpP[0], 1000, 1500;
		setarray @wrpD$[0], "Hel's Camp", "Rachel";
	} else if (.@map$ == "lighthalzen") {
		setarray @wrpP[0], 1200, 1500;
		setarray @wrpD$[0], "Rachel", "Dicastes";
	} else if (.@map$ == "dicastes01") {
		setarray @wrpP[0], 1500;
		setarray @wrpD$[0], "Lighthalzen";
	} else if (.@map$ == "comodo" ) {
		setarray @wrpD$[0], "Morocc", "Pharos Islet", "Umbala";
		setarray @wrpP[0], 1800, 1200, 1800;
	} else if (.@map$ == "cmd_fild07") {
		setarray @wrpD$[0], "Comodo", "Morocc";
		setarray @wrpP[0], 1200, 1200;
	} else if (.@map$ == "geffen") {
		setarray @wrpD$[0], "Prontera";
		setarray @wrpP[0], 1200, 1200, 1700, 1700;
		setarray @viewpX[0], 120, 203;
		setarray @viewpY[0], 62, 123;
	} else if (.@map$ == "izlude") {
		setarray @wrpD$[0], "Prontera", "Payon";
		setarray @wrpP[0], 600, 1200;
	} else if (.@map$ == "morocc") {
		setarray @wrpD$[0], "Prontera", "Pharos Islet", "Comodo";
		setarray @wrpP[0], 1200, 1200, 1800, 1800, 1200;
		setarray @viewpX[0], 156, 163, 28, 292;
		setarray @viewpY[0], 97, 260, 167, 211;
	} else if (.@map$ == "umbala") {
		setarray @wrpD$[0], "Comodo";
		setarray @wrpP[0], 1800;
	} else if (.@map$ == "payon") {
		setarray @wrpD$[0], "Prontera", "Alberta";
		setarray @wrpP[0], 1200, 1200, 1200;
	} else if (.@map$ == "einbroch") {
		setarray @wrpD$[0], "Yuno";
		setarray @wrpP[0], 1200;
	} else if (.@map$ == "yuno") {
		setarray @wrpD$[0], "Aldebaran", "Einbroch", "Hugel";
		setarray @wrpP[0], 1200, 1200, 1200;
		setarray @viewpX[0], 328, 278, 153, 0;
		setarray @viewpY[0], 108, 221, 187, 0;
	} else if (.@map$ == "job3_rune01") {
		setarray @wrpD$[0], "Izlude", "Geffen", "Payon", "Morocc", "Alberta";
		setarray @wrpP[0], 600, 1200, 1200, 1200, 1800;
	}

	.@warp_size = getarraysize(@wrpD$);

	// VIP pricing varies across the regional servers; this is most practical.
	if (VIP_SCRIPT && !vip_status(VIP_STATUS_ACTIVE)) {
		for ( .@i = 0; .@i < .@warp_size; .@i++ )
			@wrpP[.@i] *= 2;
	}

	for ( .@i = 0; .@i < .@warp_size; .@i++ )
		@wrpC$[.@i] = @wrpD$[.@i] + " -> " + @wrpP[.@i] + " z";
	@wrpC$[ .@warp_size ] = "Cancel";
	return;
}
